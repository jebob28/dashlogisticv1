from database.conection import conexao,conexao_padrao,conexaoteste,conexaoraking



def execute_sql_query(offset, page_size,data_atual):
    
    query = f"""
   SELECT
    GN_PESSOAS.APELIDO,
    CP_ORDENSCOMPRA.K_DATADOPEDIDO AS 'DATA RECEBIMENTO',
    CP_ORDENSCOMPRA.NUMERO,
	CP_ORDENSCOMPRA.FORNECEDOR,
    PD_PRODUTOS.NOME AS 'nome do produto',
    CM_UNIDADESMEDIDA.ABREVIATURA,
    CP_ORDENSCOMPRAITENS.QUANTIDADE AS 'QTD SOLICITADA',
    CP_ORDENSCOMPRAITENS.QUANTIDADE - CP_ORDENSCOMPRAITENS.SALDO AS 'QTD RECEBIDA',
    CP_ORDENSCOMPRAITENS.SALDO AS 'FALTA RECEBER',
	
    CASE 
        WHEN CP_ORDENSCOMPRAITENS.SALDO <> 0 AND CP_ORDENSCOMPRAITENS.QUANTIDADE - CP_ORDENSCOMPRAITENS.SALDO <> 0 THEN 'PARCIAL'
        WHEN CP_ORDENSCOMPRA.STATUS = 4 THEN 'ENCERRADA'
        WHEN CP_ORDENSCOMPRA.STATUS = 3 THEN 'RECEBENDO'
        WHEN CP_ORDENSCOMPRA.STATUS = 2 THEN 'PENDENTE'
        ELSE 'UNKNOWN'
    END AS 'STATUS'
    
FROM
    CP_ORDENSCOMPRAITENS WITH (NOLOCK)
    LEFT OUTER JOIN CP_ORDENSCOMPRA WITH (NOLOCK) ON (CP_ORDENSCOMPRA.HANDLE = CP_ORDENSCOMPRAITENS.ORDEMCOMPRA)
    LEFT OUTER JOIN GN_PESSOAS WITH (NOLOCK) ON (GN_PESSOAS.HANDLE = CP_ORDENSCOMPRA.FORNECEDOR)
    LEFT OUTER JOIN PD_PRODUTOS WITH (NOLOCK) ON (PD_PRODUTOS.HANDLE = CP_ORDENSCOMPRAITENS.PRODUTO)
    LEFT OUTER JOIN CM_UNIDADESMEDIDA WITH (NOLOCK) ON (CM_UNIDADESMEDIDA.HANDLE = CP_ORDENSCOMPRAITENS.UNIDADE)

WHERE
    CP_ORDENSCOMPRA.K_DATADOPEDIDO BETWEEN CONVERT(DATETIME, CONVERT(VARCHAR, GETDATE(), 103) + ' 00:00', 103)
        AND CONVERT(DATETIME, CONVERT(VARCHAR, GETDATE(), 103) + ' 23:59', 103)
    AND CP_ORDENSCOMPRAITENS.TIPOMOVIMENTACAO NOT IN (23, 90)
    AND GN_PESSOAS.APELIDO NOT IN ('Caisp Padronização', 'Caisp Previsão de Sobra')
ORDER BY
    GN_PESSOAS.APELIDO 
    OFFSET {offset} ROWS
    FETCH NEXT {page_size} ROWS ONLY;
    """
    df = conexao(query)

    return df

def ordemcompra_geral(data_atual):
    query = f""" SELECT COUNT(DISTINCT NUMERO) AS ORDEM_DE_COMPRA
                FROM CP_ORDENSCOMPRA WITH (NOLOCK)
                WHERE CONVERT(date, CP_ORDENSCOMPRA.K_DATADOPEDIDO) = CONVERT(DATETIME,'{data_atual}',120);"""
    total_count=conexao_padrao(query)
 
    return total_count




def ordemcompra_status_um(data_atual):
    query = f""" SELECT COUNT(DISTINCT NUMERO) AS OC
                FROM CP_ORDENSCOMPRA WITH (NOLOCK)
                WHERE  STATUS = 1
                AND CONVERT(date, CP_ORDENSCOMPRA.K_DATADOPEDIDO) = CONVERT(DATETIME,'{data_atual}',120);"""
    total_count=conexao_padrao(query)
 
    return total_count
   

def ordemcompra_status_dois(data_atual):
  
    query = f""" SELECT COUNT(DISTINCT NUMERO) AS OC
                FROM CP_ORDENSCOMPRA WITH (NOLOCK)
                WHERE  STATUS = 2
                AND CONVERT(date, CP_ORDENSCOMPRA.K_DATADOPEDIDO) = CONVERT(DATETIME,'{data_atual}',120);"""
    total_count=conexao_padrao(query)
 
    return total_count


def ordemcompra_status_tres(data_atual):
   
    query = f"""SELECT COUNT(DISTINCT NUMERO) AS OC
                FROM CP_ORDENSCOMPRA WITH (NOLOCK)
                WHERE  STATUS = 3
                AND CONVERT(date, CP_ORDENSCOMPRA.K_DATADOPEDIDO) = CONVERT(DATETIME,'{data_atual}',120);"""
    total_count=conexao_padrao(query)
 
    return total_count

def ordemcompra_status_quatro(data_atual):
   
    query = f""" SELECT COUNT(DISTINCT NUMERO) AS OC
                FROM CP_ORDENSCOMPRA WITH (NOLOCK)
                WHERE  STATUS = 4
                AND CONVERT(date, CP_ORDENSCOMPRA.K_DATADOPEDIDO) = CONVERT(DATETIME,'{data_atual}',120);"""
    total_count=conexao_padrao(query)
 
    return total_count

def ordemcompra_status_cinco(data_atual):
    query = f""" SELECT COUNT(DISTINCT NUMERO) AS OC
                FROM CP_ORDENSCOMPRA WITH (NOLOCK)
                WHERE  STATUS = 5
                AND CONVERT(date, CP_ORDENSCOMPRA.K_DATADOPEDIDO) = CONVERT(DATETIME,'{data_atual}',120);"""
    total_count=conexao_padrao(query)
 
    return total_count

def filtro_status_dois(data_atual):
  
    query = f"""
    SELECT
    GN_PESSOAS.APELIDO,
    CP_ORDENSCOMPRA.K_DATADOPEDIDO AS 'DATA RECEBIMENTO',
    CP_ORDENSCOMPRA.NUMERO,
    PD_PRODUTOS.NOME AS 'nome do produto',
    CM_UNIDADESMEDIDA.ABREVIATURA,
    CP_ORDENSCOMPRAITENS.QUANTIDADE AS 'QTD SOLICITADA',
    CP_ORDENSCOMPRAITENS.QUANTIDADE - CP_ORDENSCOMPRAITENS.SALDO AS 'QTD RECEBIDA',
    CP_ORDENSCOMPRAITENS.SALDO AS 'FALTA RECEBER',
	
    CASE 
        WHEN CP_ORDENSCOMPRAITENS.SALDO <> 0 AND CP_ORDENSCOMPRAITENS.QUANTIDADE - CP_ORDENSCOMPRAITENS.SALDO <> 0 THEN 'PARCIAL'
        WHEN CP_ORDENSCOMPRA.STATUS = 4 THEN 'ENCERRADA'
        WHEN CP_ORDENSCOMPRA.STATUS = 3 THEN 'RECEBENDO'
        WHEN CP_ORDENSCOMPRA.STATUS = 2 THEN 'PENDENTE'
        ELSE 'UNKNOWN'
    END AS 'STATUS'
FROM
    CP_ORDENSCOMPRAITENS WITH (NOLOCK)
    LEFT OUTER JOIN CP_ORDENSCOMPRA WITH (NOLOCK) ON (CP_ORDENSCOMPRA.HANDLE = CP_ORDENSCOMPRAITENS.ORDEMCOMPRA)
    LEFT OUTER JOIN GN_PESSOAS WITH (NOLOCK) ON (GN_PESSOAS.HANDLE = CP_ORDENSCOMPRA.FORNECEDOR)
    LEFT OUTER JOIN PD_PRODUTOS WITH (NOLOCK) ON (PD_PRODUTOS.HANDLE = CP_ORDENSCOMPRAITENS.PRODUTO)
    LEFT OUTER JOIN CM_UNIDADESMEDIDA WITH (NOLOCK) ON (CM_UNIDADESMEDIDA.HANDLE = CP_ORDENSCOMPRAITENS.UNIDADE)
	
WHERE
    CP_ORDENSCOMPRA.K_DATADOPEDIDO = '{data_atual}'
    AND CP_ORDENSCOMPRAITENS.TIPOMOVIMENTACAO NOT IN (23, 90)
	AND CP_ORDENSCOMPRA.STATUS = 2
ORDER BY
    GN_PESSOAS.APELIDO
    """
    df = conexao(query)

    return df

def filtro_status_tres(data_atual):
   
    query = f"""
    SELECT
    GN_PESSOAS.APELIDO,
    CP_ORDENSCOMPRA.K_DATADOPEDIDO AS 'DATA RECEBIMENTO',
    CP_ORDENSCOMPRA.NUMERO,
    PD_PRODUTOS.NOME AS 'nome do produto',
    CM_UNIDADESMEDIDA.ABREVIATURA,
    CP_ORDENSCOMPRAITENS.QUANTIDADE AS 'QTD SOLICITADA',
    CP_ORDENSCOMPRAITENS.QUANTIDADE - CP_ORDENSCOMPRAITENS.SALDO AS 'QTD RECEBIDA',
    CP_ORDENSCOMPRAITENS.SALDO AS 'FALTA RECEBER',
	Z_GRUPOUSUARIOS.NOME AS 'CONFERENTE',
    'RECEBENDO' AS 'STATUS'
FROM
    CP_ORDENSCOMPRAITENS WITH (NOLOCK)
    LEFT OUTER JOIN CP_ORDENSCOMPRA WITH (NOLOCK) ON (CP_ORDENSCOMPRA.HANDLE = CP_ORDENSCOMPRAITENS.ORDEMCOMPRA)
    LEFT OUTER JOIN GN_PESSOAS WITH (NOLOCK) ON (GN_PESSOAS.HANDLE = CP_ORDENSCOMPRA.FORNECEDOR)
    LEFT OUTER JOIN PD_PRODUTOS WITH (NOLOCK) ON (PD_PRODUTOS.HANDLE = CP_ORDENSCOMPRAITENS.PRODUTO)
    LEFT OUTER JOIN CM_UNIDADESMEDIDA WITH (NOLOCK) ON (CM_UNIDADESMEDIDA.HANDLE = CP_ORDENSCOMPRAITENS.UNIDADE)
	LEFT OUTER JOIN CP_RECEBIMENTOFISICO WITH (NOLOCK) ON (CP_RECEBIMENTOFISICO.FORNECEDOR = CP_ORDENSCOMPRA.FORNECEDOR)
    LEFT OUTER JOIN Z_GRUPOUSUARIOS WITH (NOLOCK) ON (CP_RECEBIMENTOFISICO.RECEPTOR = Z_GRUPOUSUARIOS.HANDLE)
WHERE
    CP_ORDENSCOMPRA.K_DATADOPEDIDO = '{data_atual}'
    AND CP_ORDENSCOMPRAITENS.TIPOMOVIMENTACAO NOT IN (23, 90)
    AND CP_ORDENSCOMPRA.STATUS = 3
    AND CP_ORDENSCOMPRAITENS.SALDO = 0 -- Garante que não seja parcial
ORDER BY
    GN_PESSOAS.APELIDO;

    """
    df = conexao(query)

    return df


def filtro_status_quatro(data_atual):
    query = f"""
    SELECT
    GN_PESSOAS.APELIDO,
    CP_ORDENSCOMPRA.K_DATADOPEDIDO AS 'DATA RECEBIMENTO',
    CP_ORDENSCOMPRA.NUMERO,
    PD_PRODUTOS.NOME AS 'nome do produto',
    CM_UNIDADESMEDIDA.ABREVIATURA,
    CP_ORDENSCOMPRAITENS.QUANTIDADE AS 'QTD SOLICITADA',
    CP_ORDENSCOMPRAITENS.QUANTIDADE - CP_ORDENSCOMPRAITENS.SALDO AS 'QTD RECEBIDA',
    CP_ORDENSCOMPRAITENS.SALDO AS 'FALTA RECEBER',
	Z_GRUPOUSUARIOS.NOME AS 'CONFERENTE',
    CASE 
        WHEN CP_ORDENSCOMPRAITENS.SALDO <> 0 AND CP_ORDENSCOMPRAITENS.QUANTIDADE - CP_ORDENSCOMPRAITENS.SALDO <> 0 THEN 'PARCIAL'
        WHEN CP_ORDENSCOMPRA.STATUS = 4 THEN 'ENCERRADA'
        WHEN CP_ORDENSCOMPRA.STATUS = 3 THEN 'RECEBENDO'
        WHEN CP_ORDENSCOMPRA.STATUS = 2 THEN 'PENDENTE'
        ELSE 'UNKNOWN'
    END AS 'STATUS'
FROM
    CP_ORDENSCOMPRAITENS WITH (NOLOCK)
    LEFT OUTER JOIN CP_ORDENSCOMPRA WITH (NOLOCK) ON (CP_ORDENSCOMPRA.HANDLE = CP_ORDENSCOMPRAITENS.ORDEMCOMPRA)
    LEFT OUTER JOIN GN_PESSOAS WITH (NOLOCK) ON (GN_PESSOAS.HANDLE = CP_ORDENSCOMPRA.FORNECEDOR)
    LEFT OUTER JOIN PD_PRODUTOS WITH (NOLOCK) ON (PD_PRODUTOS.HANDLE = CP_ORDENSCOMPRAITENS.PRODUTO)
    LEFT OUTER JOIN CM_UNIDADESMEDIDA WITH (NOLOCK) ON (CM_UNIDADESMEDIDA.HANDLE = CP_ORDENSCOMPRAITENS.UNIDADE)
	LEFT OUTER JOIN CP_RECEBIMENTOFISICO WITH (NOLOCK) ON (CP_RECEBIMENTOFISICO.FORNECEDOR = CP_ORDENSCOMPRA.FORNECEDOR)
    LEFT OUTER JOIN Z_GRUPOUSUARIOS WITH (NOLOCK) ON (CP_RECEBIMENTOFISICO.RECEPTOR = Z_GRUPOUSUARIOS.HANDLE)
WHERE
    CP_ORDENSCOMPRA.K_DATADOPEDIDO = '{data_atual}'
    AND CP_ORDENSCOMPRAITENS.TIPOMOVIMENTACAO NOT IN (23, 90)
	AND CP_ORDENSCOMPRA.STATUS = 4
ORDER BY
    GN_PESSOAS.APELIDO
    """
    df = conexao(query)

    return df

def filtro_parcial(data_atual):
    query = f"""
    SELECT
    GN_PESSOAS.APELIDO,
    CP_ORDENSCOMPRA.K_DATADOPEDIDO AS 'DATA RECEBIMENTO',
    CP_ORDENSCOMPRA.NUMERO,
    PD_PRODUTOS.NOME AS 'nome do produto',
    CM_UNIDADESMEDIDA.ABREVIATURA,
    CP_ORDENSCOMPRAITENS.QUANTIDADE AS 'QTD SOLICITADA',
    CP_ORDENSCOMPRAITENS.QUANTIDADE - CP_ORDENSCOMPRAITENS.SALDO AS 'QTD RECEBIDA',
    CP_ORDENSCOMPRAITENS.SALDO AS 'FALTA RECEBER',
	Z_GRUPOUSUARIOS.NOME AS 'CONFERENTE',
    'PARCIAL' AS 'STATUS'
FROM
    CP_ORDENSCOMPRAITENS WITH (NOLOCK)
    LEFT OUTER JOIN CP_ORDENSCOMPRA WITH (NOLOCK) ON (CP_ORDENSCOMPRA.HANDLE = CP_ORDENSCOMPRAITENS.ORDEMCOMPRA)
    LEFT OUTER JOIN GN_PESSOAS WITH (NOLOCK) ON (GN_PESSOAS.HANDLE = CP_ORDENSCOMPRA.FORNECEDOR)
    LEFT OUTER JOIN PD_PRODUTOS WITH (NOLOCK) ON (PD_PRODUTOS.HANDLE = CP_ORDENSCOMPRAITENS.PRODUTO)
    LEFT OUTER JOIN CM_UNIDADESMEDIDA WITH (NOLOCK) ON (CM_UNIDADESMEDIDA.HANDLE = CP_ORDENSCOMPRAITENS.UNIDADE)
	LEFT OUTER JOIN CP_RECEBIMENTOFISICO WITH (NOLOCK) ON (CP_RECEBIMENTOFISICO.FORNECEDOR = CP_ORDENSCOMPRA.FORNECEDOR)
    LEFT OUTER JOIN Z_GRUPOUSUARIOS WITH (NOLOCK) ON (CP_RECEBIMENTOFISICO.RECEPTOR = Z_GRUPOUSUARIOS.HANDLE)
WHERE
    CP_ORDENSCOMPRA.K_DATADOPEDIDO = '{data_atual}'
    AND CP_ORDENSCOMPRAITENS.TIPOMOVIMENTACAO NOT IN (23, 90)
    AND CP_ORDENSCOMPRA.STATUS = 3
    AND CP_ORDENSCOMPRAITENS.SALDO <> 0 -- Garante que seja parcial
    AND CP_ORDENSCOMPRAITENS.QUANTIDADE - CP_ORDENSCOMPRAITENS.SALDO <> 0 -- Garante que seja parcial
ORDER BY
    GN_PESSOAS.APELIDO;

    """
    df = conexao(query)

    return df





def teste():
    
    query = f"""
    SELECT
    GN_PESSOAS.APELIDO,
    CP_ORDENSCOMPRA.K_DATADOPEDIDO AS 'DATA RECEBIMENTO',
    CP_ORDENSCOMPRA.NUMERO,
	CP_ORDENSCOMPRA.FORNECEDOR,
    PD_PRODUTOS.NOME AS 'nome do produto',
    CM_UNIDADESMEDIDA.ABREVIATURA,
    CP_ORDENSCOMPRAITENS.QUANTIDADE AS 'QTD SOLICITADA',
    CP_ORDENSCOMPRAITENS.QUANTIDADE - CP_ORDENSCOMPRAITENS.SALDO AS 'QTD RECEBIDA',
    CP_ORDENSCOMPRAITENS.SALDO AS 'FALTA RECEBER',
	
    CASE 
        WHEN CP_ORDENSCOMPRAITENS.SALDO <> 0 AND CP_ORDENSCOMPRAITENS.QUANTIDADE - CP_ORDENSCOMPRAITENS.SALDO <> 0 THEN 'PARCIAL'
        WHEN CP_ORDENSCOMPRA.STATUS = 4 THEN 'ENCERRADA'
        WHEN CP_ORDENSCOMPRA.STATUS = 3 THEN 'RECEBENDO'
        WHEN CP_ORDENSCOMPRA.STATUS = 2 THEN 'PENDENTE'
        ELSE 'UNKNOWN'
    END AS 'STATUS'
    
FROM
    CP_ORDENSCOMPRAITENS WITH (NOLOCK)
    LEFT OUTER JOIN CP_ORDENSCOMPRA WITH (NOLOCK) ON (CP_ORDENSCOMPRA.HANDLE = CP_ORDENSCOMPRAITENS.ORDEMCOMPRA)
    LEFT OUTER JOIN GN_PESSOAS WITH (NOLOCK) ON (GN_PESSOAS.HANDLE = CP_ORDENSCOMPRA.FORNECEDOR)
    LEFT OUTER JOIN PD_PRODUTOS WITH (NOLOCK) ON (PD_PRODUTOS.HANDLE = CP_ORDENSCOMPRAITENS.PRODUTO)
    LEFT OUTER JOIN CM_UNIDADESMEDIDA WITH (NOLOCK) ON (CM_UNIDADESMEDIDA.HANDLE = CP_ORDENSCOMPRAITENS.UNIDADE)

WHERE
    CP_ORDENSCOMPRA.K_DATADOPEDIDO BETWEEN CONVERT(DATETIME, CONVERT(VARCHAR, GETDATE(), 103) + ' 00:00', 103)
        AND CONVERT(DATETIME, CONVERT(VARCHAR, GETDATE(), 103) + ' 23:59', 103)
    AND CP_ORDENSCOMPRAITENS.TIPOMOVIMENTACAO NOT IN (23, 90)
    AND GN_PESSOAS.APELIDO NOT IN ('Caisp Padronização', 'Caisp Previsão de Sobra','Caisp Higienizados')
ORDER BY
    GN_PESSOAS.APELIDO 


    """
    df = conexao(query)
    return df

def receptor():
    query = """
    SELECT 
        GU.NOME AS Nomes,
        RF.FORNECEDOR
    FROM 
        CP_RECEBIMENTOFISICO RF
    INNER JOIN 
        Z_GRUPOUSUARIOS GU ON RF.RECEPTOR = GU.HANDLE
    WHERE 
        RF.K_DATADOPEDIDO = CONVERT(DATE, GETDATE()); 
    """
    df = conexaoteste(query)
    return df

def ranking():
    query = """SELECT TOP 1
    GU.NOME AS CONFERENTE
FROM 
    CP_RECEBIMENTOFISICO RF
INNER JOIN 
    Z_GRUPOUSUARIOS GU ON RF.RECEPTOR = GU.HANDLE
WHERE 
    RF.K_DATADOPEDIDO = CONVERT(DATE, GETDATE())
GROUP BY 
    GU.NOME
ORDER BY 
    COUNT(*) DESC;
"""

    resultado = conexaoteste(query)
    if resultado:
        return resultado.iloc[0]['CONFERENTE']
    else:
        return None


def ranking():
    query="""SELECT TOP 10
    GU.NOME AS CONFERENTE,
    COUNT(*) AS QUANTIDADE
FROM 
    CP_RECEBIMENTOFISICO RF
INNER JOIN 
    Z_GRUPOUSUARIOS GU ON RF.RECEPTOR = GU.HANDLE
WHERE 
    RF.K_DATADOPEDIDO = CONVERT(DATE, GETDATE())
GROUP BY 
    GU.NOME
ORDER BY 
    QUANTIDADE DESC;"""
    
    df=conexaoraking(query)
    return df